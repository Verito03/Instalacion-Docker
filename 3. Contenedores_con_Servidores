CONTENEDORES CON SERVIDORES EN DOCKER 游낾
Realizado por Ver칩nica Pardo Mart칤n
-----------------------------------------------------
      游늷 DESPLIEGUE DE WORDPRESS + MARIADB
Para la instalaci칩n de Wordpress necesitamos dos contenedores: uno para ejecutar la base de datos MariaDB y el servidor web con la aplicaci칩n.
Siguiendo la documentaci칩n de la imagen mariadb y la imagen wordpress podemos ejecutarlos para que se creen.
Una vez creados, accedemos desde el exterior al servidor web, con los puertos mapeados.

Para ver los puertos que est치n MAPEADOS en un contenedor de dos manera distintas (siendo 80 el puerto local)
'docker port my-apache-app 80/tpc -> 0.0.0.0:8080'
'docker port my-apache-app 80/tcp -> [::]:8080'

Para probarlo accedemos desde un navegador web poniendo lo siguiente 'http://localhost:8080'
Y dever칤a salir un 'It works!' para confirmar que lo hemos realizado bien
-----------------------------------------------------
      游늷 MODIFICACIONES
Podemos modificar el contenedor podemos hacerlo de diferentes formas:
'docker exec -it my-apache-app bash -c 'echo "<h1>Curso Docker</h1>" > /usr/local/apache2/htdocs/index.html'
'echo "<h1>Curso Docker</h1>" > index.html
docker cp index.html  my-apache-app:/usr/local/apache2/htdocs/'
-----------------------------------------------------
      游늷 CONTENEDOR CON CONTRASE칌A
Para crear el contenedor usamos el siguiente comando 'docker run -d --name mariadb -e MARIADB_ROOT_PASSWD=my-secret-pw mariadb:10.5' e indicamos la contrase침a de nuestra contase침a

Para CREAR DIFERENTES CONTENEDORES para usarlos en nuestra app usamos 'docker run -l servicio=web -l entorno=desarrollo -l aplicacion=apache --name prueba_web ubuntu'

Para BUSCAR LOS CONTENEDORES CON UN FILTRO usamos 'docker ps -a --filter='label='aplication'' o '--filter='label=entorno''
